import openai

def mci_v1(corpus):
    prompt = f"""
    Given the concept: "{corpus}", generate a concept that is maximally orthogonal across these axes:
    - Semantic (completely different meaning)
    - Functional (completely different use)
    - Causal (has no causal relationship)
    - Spatial/Temporal (exists in a different space or time)
    - Conceptual/Abstract (belongs to a different intellectual framework)
    
    Provide only the concept name.
    """
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "system", "content": "You are an expert in conceptual divergence."},
                  {"role": "user", "content": prompt}]
    )
    return response["choices"][0]["message"]["content"]

def mci_v2(corpus, depth):
    output = corpus
    history = [output]  # Store the sequence of inversions

    for _ in range(depth):
        output = mci_v1(output)
        history.append(output)
    
    return history


def mci_v3(corpus, depth):
    output = corpus
    history = [output]

    for _ in range(depth):
        combined_input = " + ".join(history)  # Combine all prior outputs as new input
        output = mci_v1(combined_input)
        history.append(output)
    
    return history

# Test MCIv1
concept_orthogonal = mci_v1("The Smell of Rain")
print("MCIv1 Output:", concept_orthogonal)

# Test MCIv2 (Recursive)
recursive_outputs = mci_v2("The Smell of Rain", depth=5)
print("MCIv2 Recursive Outputs:", recursive_outputs)

# Test MCIv3 (Combinatorial Recursive)
combinatorial_outputs = mci_v3("The Smell of Rain", depth=5)
print("MCIv3 Combinatorial Recursive Outputs:", combinatorial_outputs)
